{"pageContext":{"componentNode":{"displayName":"TextInput","docblock":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js","description":{"text":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js"},"props":[{"name":"floatingPlaceholder","type":{"name":"bool"},"description":{"text":"should placeholder have floating behavior"},"defaultValue":null},{"name":"floatingPlaceholderColor","type":{"name":"union"},"description":{"text":"floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"helperText","type":{"name":"string"},"description":{"text":"This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\nas well (NOT for expandable textInputs)"},"defaultValue":null},{"name":"hideUnderline","type":{"name":"bool"},"description":{"text":"hide text input underline, by default false"},"defaultValue":null},{"name":"underlineColor","type":{"name":"union"},"description":{"text":"underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"disabledColor","type":{"name":"string"},"description":{"text":"the color of all text when the input is disabled (if undefined will not apply color)"},"defaultValue":null},{"name":"centered","type":{"name":"bool"},"description":{"text":"should text input be align to center"},"defaultValue":null},{"name":"error","type":{"name":"string"},"description":{"text":"input error message, should be empty if no error exists"},"defaultValue":null},{"name":"enableErrors","type":{"name":"bool"},"description":{"text":"should the input component support error messages"},"defaultValue":{"value":"true"}},{"name":"expandable","type":{"name":"bool"},"description":{"text":"should the input expand to another text area modal"},"defaultValue":null},{"name":"renderExpandableInput","type":{"name":"func"},"description":{"text":"Render custom expandable input (requires expandable to be true)"},"defaultValue":null},{"name":"renderExpandable","type":{"name":"func"},"description":{"text":"allow custom rendering of expandable content when clicking on the input (useful for pickers)\naccept props and state as params, ex. (props, state) => {...}\nuse toggleExpandableModal(false) method to toggle off the expandable content"},"defaultValue":null},{"name":"transformer","type":{"name":"func"},"description":{"text":"transform function executed on value and return transformed value"},"defaultValue":null},{"name":"title","type":{"name":"string"},"description":{"text":"Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')"},"defaultValue":null},{"name":"titleColor","type":{"name":"union"},"description":{"text":"The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"titleStyle","type":{"name":"union"},"description":{"text":"Additional styles for the title (not including 'color')"},"defaultValue":null},{"name":"showCharacterCounter","type":{"name":"bool"},"description":{"text":"should the input display a character counter (only when passing 'maxLength')"},"defaultValue":null},{"name":"floatOnFocus","type":{"name":"bool"},"description":{"text":"should float the placeholer when focused (instead of when typing)"},"defaultValue":null},{"name":"useTopErrors","type":{"name":"bool"},"description":{"text":"should the errors be displayed at the top"},"defaultValue":null},{"name":"rightIconSource","type":{"name":"union"},"description":{"text":"Icon asset source for showing on the right side, appropriate for dropdown icon and such"},"defaultValue":null},{"name":"placeholderTextColor","type":null,"description":null,"defaultValue":{"value":"Colors.dark40"}}]},"components":[{"node":{"displayName":"IGNORE","docblock":"@description: A multiple layer for multiple shadow effect for iOS only","description":{"text":"@description: A multiple layer for multiple shadow effect for iOS only"},"props":[{"name":"topShadow","type":{"name":"object"},"description":{"text":"top shadow style to use"},"defaultValue":null},{"name":"bottomShadow","type":{"name":"object"},"description":{"text":"bottom shadow style to use"},"defaultValue":null},{"name":"shadowType","type":{"name":"enum"},"description":{"text":"a combination of top and bottom shadow based on shadow presets names"},"defaultValue":{"value":"'white40'"}},{"name":"shadowColor","type":{"name":"string"},"description":{"text":"Custom shadow color to be applied on both top and bottom shadows"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"card border radius (will be passed to inner Card.Image component)"},"defaultValue":null}]}},{"node":{"displayName":"ActionBar","docblock":"@description: Quick actions bar, each action support Button component props\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/xULW8DwxkniFDMw7TO/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionBarScreen.js","description":{"text":"@description: Quick actions bar, each action support Button component props\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/xULW8DwxkniFDMw7TO/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionBarScreen.js"},"props":[{"name":"height","type":{"name":"number"},"description":{"text":"action bar height"},"defaultValue":{"value":"48"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"action bar background color"},"defaultValue":{"value":"Colors.white"}},{"name":"actions","type":{"name":"arrayOf"},"description":{"text":"actions for the action bar"},"defaultValue":null},{"name":"centered","type":{"name":"bool"},"description":{"text":"should action be equally centered"},"defaultValue":null},{"name":"useSafeArea","type":{"name":"bool"},"description":{"text":"use safe area, in case action bar attached to the bottom (default: true)"},"defaultValue":{"value":"true"}},{"name":"keepRelative","type":{"name":"bool"},"description":{"text":"keep the action bar postion relative instead of it absolute position"},"defaultValue":null},{"name":"style","type":{"name":"union"},"description":{"text":"style the action bar"},"defaultValue":null}]}},{"node":{"displayName":"ActionSheet","docblock":"@description: Cross platform Action sheet, with a support for native iOS solution\n@gif: https://media.giphy.com/media/l0HUpXOR6RqB2ct5S/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionSheetScreen.js","description":{"text":"@description: Cross platform Action sheet, with a support for native iOS solution\n@gif: https://media.giphy.com/media/l0HUpXOR6RqB2ct5S/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ActionSheetScreen.js"},"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Whether to show the action sheet or not"},"defaultValue":null},{"name":"title","type":{"name":"string"},"description":{"text":"Title of the action sheet. Note: if both title and message are not passed will not render the title view at all"},"defaultValue":{"value":"undefined"}},{"name":"message","type":{"name":"string"},"description":{"text":"Message of the action sheet"},"defaultValue":{"value":"undefined"}},{"name":"cancelButtonIndex","type":{"name":"number"},"description":{"text":"Index of the option represents the cancel action (to be displayed as the separated bottom bold button)"},"defaultValue":null},{"name":"destructiveButtonIndex","type":{"name":"number"},"description":{"text":"Index of the option represents the destructive action (will display red text. Usually used for 'delete' or\n'abort' actions)"},"defaultValue":null},{"name":"options","type":{"name":"arrayOf"},"description":{"text":"List of options for the action sheet, follows the Button prop types (supply 'label' string and 'onPress'\nfunction)"},"defaultValue":null},{"name":"onDismiss","type":{"name":"func"},"description":{"text":"callback for when dismissing the action sheet, usually used for setting visible prop to false"},"defaultValue":null},{"name":"useNativeIOS","type":{"name":"bool"},"description":{"text":"Should use the native action sheet for iOS"},"defaultValue":null},{"name":"showCancelButton","type":{"name":"bool"},"description":{"text":"When passed (only with useNativeIOS), will display a cancel button at the bottom (overrides cancelButtonIndex)"},"defaultValue":{"value":"false"}}]}},{"node":{"displayName":"AnimatedScanner","docblock":"@description: Scanner component for progress indication\n@extends: Animated.View\n@gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/CardScannerScreen.js","description":{"text":"@description: Scanner component for progress indication\n@extends: Animated.View\n@gif: https://media.giphy.com/media/l49JVcxoclUXbryiA/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/CardScannerScreen.js"},"props":[{"name":"progress","type":{"name":"number"},"description":{"text":"animated value between 0 and 100"},"defaultValue":{"value":"0"}},{"name":"duration","type":{"name":"number"},"description":{"text":"Duration of current break (can be change between breaks)"},"defaultValue":{"value":"1000"}},{"name":"opacity","type":{"name":"number"},"description":{"text":"scanner opacity"},"defaultValue":null},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"scanner background color"},"defaultValue":null},{"name":"onBreakpoint","type":{"name":"func"},"description":{"text":"breakpoint callback - ({progress, isDone}) => {}"},"defaultValue":null},{"name":"hideScannerLine","type":{"name":"bool"},"description":{"text":"should hide the scanner line"},"defaultValue":null}]}},{"node":{"displayName":"Badge","docblock":"@description: Round colored badge, typically used to show a number\n@extends: Animatable.View\n@extendslink: https://github.com/oblador/react-native-animatable\n@image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.js","description":{"text":"@description: Round colored badge, typically used to show a number\n@extends: Animatable.View\n@extendslink: https://github.com/oblador/react-native-animatable\n@image: https://user-images.githubusercontent.com/33805983/34480753-df7a868a-efb6-11e7-9072-80f5c110a4f3.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/BadgesScreen.js"},"props":[{"name":"label","type":{"name":"string"},"description":{"text":"Text to show inside the badge.\nNot passing a label (undefined) will present a pimple badge."},"defaultValue":null},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"Color of the badge background"},"defaultValue":null},{"name":"size","type":{"name":"enum"},"description":{"text":"the badge size (default, small)"},"defaultValue":{"value":"'default'"}},{"name":"borderWidth","type":{"name":"number"},"description":{"text":"width of border around the badge"},"defaultValue":null},{"name":"borderColor","type":{"name":"string"},"description":{"text":"color of border around the badge"},"defaultValue":null},{"name":"containerStyle","type":{"name":"object"},"description":{"text":"Additional styles for the top container"},"defaultValue":null},{"name":"labelFormatterLimit","type":{"name":"enum"},"description":{"text":"Receives a number from 1 to 4, representing the label's max digit length.\nBeyond the max number for that digit length, a \"+\" will show at the end.\nIf set to a value not included in LABEL_FORMATTER_VALUES, no formating will occur.\nExample: labelLengthFormater={2}, label={124}, label will present \"99+\"."},"defaultValue":null},{"name":"icon","type":{"name":"union"},"description":{"text":"Renders an icon badge"},"defaultValue":null},{"name":"iconStyle","type":{"name":"object"},"description":{"text":"Additional styling to badge icon"},"defaultValue":null},{"name":"iconProps","type":{"name":"object"},"description":{"text":"Additional props passed to icon"},"defaultValue":null},{"name":"testId","type":{"name":"string"},"description":{"text":"Use to identify the badge in tests"},"defaultValue":null}]}},{"node":{"displayName":"Button","docblock":"@description: Basic button component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, background\n@gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.js","description":{"text":"@description: Basic button component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, background\n@gif: https://media.giphy.com/media/xULW8j5WzsuPytqklq/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ButtonsScreen.js"},"props":[{"name":"label","type":{"name":"string"},"description":{"text":"Text to show inside the button"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"The Button text color (inherited from Text component)"},"defaultValue":null},{"name":"iconSource","type":{"name":"union"},"description":{"text":"Icon image source"},"defaultValue":null},{"name":"iconStyle","type":{"name":"union"},"description":{"text":"Icon image style"},"defaultValue":null},{"name":"iconOnRight","type":{"name":"bool"},"description":{"text":"Should the icon be right to the label"},"defaultValue":{"value":"false"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"Color of the button background"},"defaultValue":null},{"name":"size","type":{"name":"enum"},"description":{"text":"Size of the button [large, medium, small]"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"Custom border radius."},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Actions handler"},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Disable interactions for the component"},"defaultValue":null},{"name":"outline","type":{"name":"bool"},"description":{"text":"Button will have outline style"},"defaultValue":null},{"name":"outlineColor","type":{"name":"string"},"description":{"text":"The outline color"},"defaultValue":null},{"name":"outlineWidth","type":{"name":"number"},"description":{"text":"The outline width"},"defaultValue":null},{"name":"link","type":{"name":"bool"},"description":{"text":"Button will look like a link"},"defaultValue":null},{"name":"linkColor","type":{"name":"string"},"description":{"text":"label color for when it's displayed as link"},"defaultValue":null},{"name":"labelStyle","type":{"name":"union"},"description":{"text":"Additional styles for label text"},"defaultValue":null},{"name":"labelProps","type":{"name":"object"},"description":{"text":"Props that will be passed to the button's Text label."},"defaultValue":null},{"name":"fullWidth","type":{"name":"bool"},"description":{"text":"should the button act as a coast to coast button (no border radius)"},"defaultValue":null},{"name":"round","type":{"name":"bool"},"description":{"text":"should the button be a round button"},"defaultValue":null},{"name":"enableShadow","type":{"name":"bool"},"description":{"text":"Control shadow visibility"},"defaultValue":null},{"name":"avoidInnerPadding","type":{"name":"bool"},"description":{"text":"avoid inner button padding"},"defaultValue":null},{"name":"avoidMinWidth","type":{"name":"bool"},"description":{"text":"avoid minimum width constraints"},"defaultValue":null},{"name":"getActiveBackgroundColor","type":{"name":"func"},"description":{"text":"callback for getting activeBackgroundColor (e.g. (calculatedBackgroundColor, prop) => {...})\nbetter set using ThemeManager"},"defaultValue":null},{"name":"animateLayout","type":{"name":"bool"},"description":{"text":"should animate layout change\nNote: For Android you must set 'setLayoutAnimationEnabledExperimental(true)' via RN's 'UIManager'"},"defaultValue":null},{"name":"animateTo","type":{"name":"enum"},"description":{"text":"the direction of the animation ('left' and 'right' will effect the button's own alignment)"},"defaultValue":null}]}},{"node":{"displayName":"Card.Image","docblock":"@description: Card.Image, part of the Card component belongs inside a Card (better be a direct child)\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js","description":{"text":"@description: Card.Image, part of the Card component belongs inside a Card (better be a direct child)\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js"},"props":[{"name":"imageSource","type":{"name":"union"},"description":{"text":"Image source, either remote source or local. Note: for remote pass object {uri: <remote_uri_string>}"},"defaultValue":null},{"name":"width","type":{"name":"union"},"description":{"text":"Image width"},"defaultValue":null},{"name":"height","type":{"name":"union"},"description":{"text":"Image height"},"defaultValue":null},{"name":"position","type":{"name":"union"},"description":{"text":"The Image position which determines the appropriate flex-ness of the image and border radius (for Android)\nthis prop derived automatically from Card parent component if it rendered as a direct child of the\nCard component"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"border radius, basically for Android since overflow doesn't work well"},"defaultValue":{"value":"BorderRadiuses.br40"}}]}},{"node":{"displayName":"Card.Item","docblock":"@description: Card.Item, a sub Card component for layout-ing inside a card\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js","description":{"text":"@description: Card.Item, a sub Card component for layout-ing inside a card\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js"},"props":[{"name":"row","type":{"name":"bool"},"description":{"text":"align flex as a row (default)"},"defaultValue":{"value":"true"}},{"name":"column","type":{"name":"bool"},"description":{"text":"align flex as a column"},"defaultValue":null}]}},{"node":{"displayName":"Card","docblock":"@description: Card component\n@extends: TouchableOpacity\n@extendsnotes: (Touchable when passing onPress)\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js","description":{"text":"@description: Card component\n@extends: TouchableOpacity\n@extendsnotes: (Touchable when passing onPress)\n@extendslink: docs/TouchableOpacity\n@modifiers: margin, padding\n@gif: https://media.giphy.com/media/l0HU9SKWmv0VTOYMM/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js"},"props":[{"name":"width","type":{"name":"union"},"description":{"text":"card custom width"},"defaultValue":null},{"name":"height","type":{"name":"union"},"description":{"text":"card custom height"},"defaultValue":null},{"name":"row","type":{"name":"bool"},"description":{"text":"should inner card flow direction be horizontal"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"card border radius (will be passed to inner Card.Image component)"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"action for when pressing the card"},"defaultValue":null},{"name":"enableShadow","type":{"name":"bool"},"description":{"text":"whether the card should have shadow or not"},"defaultValue":{"value":"true"}},{"name":"elevation","type":{"name":"number"},"description":{"text":"elevation value (Android only)"},"defaultValue":null},{"name":"enableBlur","type":{"name":"bool"},"description":{"text":"enable blur effect (iOS only)"},"defaultValue":null},{"name":"blurOptions","type":{"name":"object"},"description":{"text":"blur option for blur effect according to react-native-blur lib (make sure enableBlur is on)"},"defaultValue":null},{"name":"containerStyle","type":{"name":"custom"},"description":{"text":"Additional styles for the top container"},"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":{"text":"Adds visual indication that the card is selected"},"defaultValue":{"value":"false"}},{"name":"selectionOptions","type":{"name":"shape"},"description":{"text":"Custom options for styling the selection indication"},"defaultValue":null}]}},{"node":{"displayName":"Card.Section","docblock":"@description: Card.Section, a sub Card component for layout-ing inside a card\n@extends: BlurView\n@extendsnotes: (iOS only)\n@extendslink: https://github.com/react-native-community/react-native-blur/blob/master/src/BlurView.ios.js\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js","description":{"text":"@description: Card.Section, a sub Card component for layout-ing inside a card\n@extends: BlurView\n@extendsnotes: (iOS only)\n@extendslink: https://github.com/react-native-community/react-native-blur/blob/master/src/BlurView.ios.js\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CardsScreen.js"},"props":[{"name":"enableBlur","type":{"name":"bool"},"description":{"text":"Enable blur view for the section"},"defaultValue":null},{"name":"blurOptions","type":{"name":"object"},"description":{"text":"Blur options"},"defaultValue":null},{"name":"body","type":{"name":"bool"},"description":{"text":"thid modifier apply inner padding"},"defaultValue":null},{"name":"footer","type":{"name":"bool"},"description":{"text":"style as a footer, remove bottom spacing"},"defaultValue":null}]}},{"node":{"displayName":"Checkbox","docblock":"Checkbox component for toggling boolean value related to some context","description":{"text":"Checkbox component for toggling boolean value related to some context"},"props":[{"name":"value","type":{"name":"bool"},"description":{"text":"The value of the Checkbox. If true the switch will be turned on. Default value is false."},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"Invoked with the new value when the value changes."},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Whether the checkbox should be disabled"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"The Checkbox color"},"defaultValue":null},{"name":"size","type":{"name":"number"},"description":{"text":"The size of the checkbox. affect both width and height"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"The Checkbox border radius"},"defaultValue":null},{"name":"selectedIcon","type":{"name":"number"},"description":{"text":"The icon asset to use for the selected indication (accept only local assets)"},"defaultValue":null},{"name":"iconColor","type":{"name":"string"},"description":{"text":"The selected icon color"},"defaultValue":null}]}},{"node":{"displayName":"Image","docblock":"@description: Image wrapper with extra functionality like source transform and assets support\n@extends: Image\n@extendslink: https://facebook.github.io/react-native/docs/image.html","description":{"text":"@description: Image wrapper with extra functionality like source transform and assets support\n@extends: Image\n@extendslink: https://facebook.github.io/react-native/docs/image.html"},"props":[{"name":"sourceTransformer","type":{"name":"func"},"description":{"text":"custom source transform handler for manipulating the image source (great for size control)"},"defaultValue":null},{"name":"assetName","type":{"name":"string"},"description":{"text":"if provided image source will be driven from asset name"},"defaultValue":null},{"name":"assetGroup","type":{"name":"string"},"description":{"text":"the asset group, default is \"icons\""},"defaultValue":{"value":"'icons'"}},{"name":"tintColor","type":{"name":"string"},"description":{"text":"the asset tint"},"defaultValue":null}]}},{"node":{"displayName":"Avatar","docblock":"@description: Avatar component for displaying user profile images\n@extends: TouchableOpacity\n@extendsnotes: (when passing onPress)\n@extendslink: docs/TouchableOpacity\n@image: https://user-images.githubusercontent.com/33805983/34480603-197d7f64-efb6-11e7-9feb-db8ba756f055.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.js","description":{"text":"@description: Avatar component for displaying user profile images\n@extends: TouchableOpacity\n@extendsnotes: (when passing onPress)\n@extendslink: docs/TouchableOpacity\n@image: https://user-images.githubusercontent.com/33805983/34480603-197d7f64-efb6-11e7-9feb-db8ba756f055.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AvatarsScreen.js"},"props":[{"name":"animate","type":{"name":"bool"},"description":{"text":"Adds fade in animation when Avatar image loads"},"defaultValue":{"value":"false"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"Background color for Avatar"},"defaultValue":{"value":"Colors.dark80"}},{"name":"badgePosition","type":{"name":"enum"},"description":{"text":"Badge location on Avatar"},"defaultValue":{"value":"'TOP_RIGHT'"}},{"name":"badgeProps","type":{"name":"object"},"description":{"text":"Badge props passed down to Badge component"},"defaultValue":null},{"name":"containerStyle","type":{"name":"custom"},"description":{"text":"Additional spacing styles for the container"},"defaultValue":null},{"name":"imageSource","type":{"name":"union"},"description":{"text":"The image source (external or assets)"},"defaultValue":null},{"name":"imageProps","type":{"name":"object"},"description":{"text":"Image props object"},"defaultValue":null},{"name":"imageStyle","type":{"name":"union"},"description":{"text":"Image style object used to pass additional style props\nby components which render image"},"defaultValue":null},{"name":"onImageLoadStart","type":{"name":"func"},"description":{"text":"Listener-callback for when an image's (uri) loading\nstarts (equiv. to Image.onLoadStart())."},"defaultValue":null},{"name":"onImageLoadEnd","type":{"name":"func"},"description":{"text":"Listener-callback for when an image's (uri) loading\neither succeeds or fails (equiv. to Image.onLoadEnd())."},"defaultValue":null},{"name":"onImageLoadError","type":{"name":"func"},"description":{"text":"Listener-callback for when an image's (uri) loading\nfails (equiv. to Image.onError())."},"defaultValue":null},{"name":"label","type":{"name":"string"},"description":{"text":"Label that can represent initials"},"defaultValue":null},{"name":"labelColor","type":{"name":"string"},"description":{"text":"The label color"},"defaultValue":{"value":"Colors.dark10"}},{"name":"ribbonLabel","type":{"name":"string"},"description":{"text":"ribbon label to display on the avatar"},"defaultValue":null},{"name":"ribbonStyle","type":{"name":"custom"},"description":{"text":"ribbon custom style"},"defaultValue":null},{"name":"ribbonLabelStyle","type":{"name":"custom"},"description":{"text":"ribbon label custom style"},"defaultValue":null},{"name":"isOnline","type":{"name":"bool"},"description":{"text":"Determine if to show online badge"},"defaultValue":null},{"name":"status","type":{"name":"enum"},"description":{"text":"AWAY, ONLINE, OFFLINE or NONE mode (if set to a value other then 'NONE' will override isOnline prop)"},"defaultValue":null},{"name":"size","type":{"name":"number"},"description":{"text":"Custom size for the Avatar"},"defaultValue":{"value":"50"}},{"name":"onPress","type":{"name":"func"},"description":{"text":"Press handler"},"defaultValue":null}]}},{"node":{"displayName":"Notification","docblock":"@description: The Notification component will be changed soon, please use the Toast component instead","description":{"text":"@description: The Notification component will be changed soon, please use the Toast component instead"},"props":[]}},{"node":{"displayName":"Carousel","docblock":"@description: Carousel for scrolling pages horizontally\n@gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.js","description":{"text":"@description: Carousel for scrolling pages horizontally\n@gif: https://media.giphy.com/media/l0HU7f8gjpRlMRhKw/giphy.gif, https://media.giphy.com/media/3oFzmcjX9OhpyckhcQ/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/CarouselScreen.js"},"props":[{"name":"initialPage","type":{"name":"number"},"description":{"text":"the first page to start with"},"defaultValue":{"value":"0"}},{"name":"pageWidth","type":{"name":"number"},"description":{"text":"the page width (all pages should have the same width)"},"defaultValue":{"value":"Constants.screenWidth"}},{"name":"loop","type":{"name":"bool"},"description":{"text":"if true, will have infinite scroll"},"defaultValue":null},{"name":"onChangePage","type":{"name":"func"},"description":{"text":"callback for when page has changed"},"defaultValue":null},{"name":"onScroll","type":{"name":"func"},"description":{"text":"callback for onScroll event of the internal ScrollView"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"the carousel style"},"defaultValue":null}]}},{"node":{"displayName":"Dialog","docblock":"","description":null,"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Control visibility of the dialog"},"defaultValue":null},{"name":"onDismiss","type":{"name":"func"},"description":{"text":"Dismiss callback for when clicking on the background"},"defaultValue":null},{"name":"dismissSwipeDirection","type":{"name":"enum"},"description":{"text":"The direction of the swipe to dismiss the dialog (default is 'down')"},"defaultValue":null},{"name":"overlayBackgroundColor","type":{"name":"string"},"description":{"text":"The color of the overlay background"},"defaultValue":{"value":"Colors.rgba(Colors.dark10, 0.6)"}},{"name":"width","type":{"name":"union"},"description":{"text":"The dialog width (default: 90%)"},"defaultValue":{"value":"'90%'"}},{"name":"height","type":{"name":"union"},"description":{"text":"The dialog height (default: 70%)"},"defaultValue":{"value":"'70%'"}},{"name":"animationConfig","type":{"name":"object"},"description":{"text":"The animation configuration to pass to the dialog (ex. {animation, delay, duration, easing})"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"The dialog container style"},"defaultValue":null},{"name":"disablePan","type":{"name":"bool"},"description":{"text":"Disable the pan gesture recognizer"},"defaultValue":null},{"name":"useModal","type":{"name":"bool"},"description":{"text":"Whether to display the dialog in a modal"},"defaultValue":{"value":"true"}}]}},{"node":{"displayName":"PanGestureView","docblock":"@description: PanGestureView component for drag and swipe gestures (supports only vertical gestures at the moment)","description":{"text":"@description: PanGestureView component for drag and swipe gestures (supports only vertical gestures at the moment)"},"props":[{"name":"onDismiss","type":{"name":"func"},"description":{"text":"onDismiss callback"},"defaultValue":null},{"name":"direction","type":{"name":"enum"},"description":{"text":"The direction of the allowed pan (default is down)"},"defaultValue":{"value":"'down'"}}]}},{"node":{"displayName":"ProgressBar","docblock":"@description: Animated progress bar\n@gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/ProgressBarScreen.js","description":{"text":"@description: Animated progress bar\n@gif:https://media.giphy.com/media/3o752o08oY0oCvOxR6/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/animationScreens/ProgressBarScreen.js"},"props":[{"name":"height","type":{"name":"number"},"description":{"text":"height of the progress bar"},"defaultValue":null},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"background color of the component"},"defaultValue":{"value":"Colors.dark60"}},{"name":"progressBackgroundColor","type":{"name":"string"},"description":{"text":"the progress background color"},"defaultValue":{"value":"Colors.dark10"}}]}},{"node":{"displayName":"PageControl","docblock":"@description: Page indicator, typically used in paged scroll-views\n@image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.js","description":{"text":"@description: Page indicator, typically used in paged scroll-views\n@image: https://user-images.githubusercontent.com/33805983/34663655-76698110-f460-11e7-854b-243d27f66fec.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/PageControlScreen.js"},"props":[{"name":"containerStyle","type":{"name":"union"},"description":{"text":"Additional styles for the top container"},"defaultValue":null},{"name":"numOfPages","type":{"name":"number"},"description":{"text":"Total number of pages"},"defaultValue":null},{"name":"currentPage","type":{"name":"number"},"description":{"text":"Zero-based index of the current page"},"defaultValue":null},{"name":"onPagePress","type":{"name":"func"},"description":{"text":"Action handler for clicking on a page indicator"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"Color of the selected page dot and, if inactiveColor not passed, the border of the not selected pages"},"defaultValue":null},{"name":"inactiveColor","type":{"name":"string"},"description":{"text":"Color of the unselected page dots and the border of the not selected pages"},"defaultValue":null},{"name":"size","type":{"name":"number"},"description":{"text":"The size of the page indicator"},"defaultValue":{"value":"10"}},{"name":"enlargeActive","type":{"name":"bool"},"description":{"text":"Whether to enlarge the active page indicator"},"defaultValue":{"value":"false"}},{"name":"spacing","type":{"name":"number"},"description":{"text":"The space between the siblings page indicators"},"defaultValue":{"value":"4"}}]}},{"node":{"displayName":"Hint","docblock":"@description: Hint component.","description":{"text":"@description: Hint component."},"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Control the visibility of the hint"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"The hint background color"},"defaultValue":null},{"name":"message","type":{"name":"union"},"description":{"text":"The hint message"},"defaultValue":null},{"name":"messageStyle","type":{"name":"union"},"description":{"text":"The hint message custom style"},"defaultValue":null},{"name":"icon","type":{"name":"union"},"description":{"text":"Icon to show next to the hint's message"},"defaultValue":null},{"name":"iconStyle","type":{"name":"union"},"description":{"text":"The icon's style"},"defaultValue":null},{"name":"position","type":{"name":"enum"},"description":{"text":"The hint's position"},"defaultValue":{"value":"'bottom'"}},{"name":"targetFrame","type":{"name":"shape"},"description":{"text":"Provide custom target position instead of wrapping a child"},"defaultValue":null},{"name":"useSideTip","type":{"name":"bool"},"description":{"text":"Show side tips instead of the middle tip"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"The hint's border radius"},"defaultValue":null},{"name":"edgeMargins","type":{"name":"number"},"description":{"text":"Hint margins from screen edges"},"defaultValue":null},{"name":"offset","type":{"name":"number"},"description":{"text":"Hint offset from target"},"defaultValue":null},{"name":"onBackgroundPress","type":{"name":"func"},"description":{"text":"Callback for the background press"},"defaultValue":null}]}},{"node":{"displayName":"ListItem","docblock":"@description: List item component to render inside a List component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js","description":{"text":"@description: List item component to render inside a List component\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@gif: https://media.giphy.com/media/l1IBjHowyPcOTWAY8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js"},"props":[{"name":"height","type":{"name":"union"},"description":{"text":"the list item height"},"defaultValue":{"value":"63"}},{"name":"onPress","type":{"name":"func"},"description":{"text":"action for when pressing the item"},"defaultValue":null},{"name":"onLongPress","type":{"name":"func"},"description":{"text":"action for when long pressing the item"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"Additional styles for the top container"},"defaultValue":null},{"name":"containerElement","type":{"name":"func"},"description":{"text":"The container element to wrap the ListItem"},"defaultValue":{"value":"TouchableOpacity"}},{"name":"underlayColor","type":null,"description":null,"defaultValue":{"value":"Colors.dark70"}}]}},{"node":{"displayName":"ListItem.Part","docblock":"@description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js","description":{"text":"@description: ListItem.Part, a sub ListItem component for layout-ing inside a ListItem\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/listScreens/BasicListScreen.js"},"props":[{"name":"left","type":{"name":"bool"},"description":{"text":"this part content will be aligned to left"},"defaultValue":null},{"name":"middle","type":{"name":"bool"},"description":{"text":"this part content will be aligned to spreaded"},"defaultValue":null},{"name":"right","type":{"name":"bool"},"description":{"text":"this part content will be aligned to right"},"defaultValue":null},{"name":"row","type":{"name":"bool"},"description":{"text":"this part content direction will be row (default)"},"defaultValue":null},{"name":"column","type":{"name":"bool"},"description":{"text":"this part content direction will be column"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"container style"},"defaultValue":null}]}},{"node":{"displayName":"IGNORE","docblock":"","description":null,"props":[{"name":"label","type":{"name":"string"},"description":{"text":"Text to show on the button"},"defaultValue":null},{"name":"styles","type":{"name":"object"},"description":{"text":"Style from the parent component with `button` style, `buttonText` style and `disableText` style"},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Disabled state of the button"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Handler function to receive updates when the value changes"},"defaultValue":null},{"name":"testID","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Switch","docblock":"Switch component for toggling boolean value related to some context","description":{"text":"Switch component for toggling boolean value related to some context"},"props":[{"name":"value","type":{"name":"bool"},"description":{"text":"The value of the switch. If true the switch will be turned on. Default value is false"},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"Invoked with the new value when the value changes"},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Whether the switch should be disabled"},"defaultValue":null},{"name":"width","type":{"name":"number"},"description":{"text":"The Switch width"},"defaultValue":null},{"name":"height","type":{"name":"number"},"description":{"text":"The Switch height"},"defaultValue":null},{"name":"onColor","type":{"name":"string"},"description":{"text":"The Switch background color when it's turned on"},"defaultValue":null},{"name":"offColor","type":{"name":"string"},"description":{"text":"The Switch background color when it's turned off"},"defaultValue":null},{"name":"disabledColor","type":{"name":"string"},"description":{"text":"The Switch background color when it's disabled"},"defaultValue":null},{"name":"thumbColor","type":{"name":"string"},"description":{"text":"The Switch's thumb color"},"defaultValue":null},{"name":"thumbSize","type":{"name":"number"},"description":{"text":"The Switch's thumb size (width & height)"},"defaultValue":null},{"name":"thumbStyle","type":{"name":"union"},"description":{"text":"The Switch's thumb style"},"defaultValue":null}]}},{"node":{"displayName":"Stepper","docblock":"@description: Stepper component with increase and decrease buttons\n@gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js","description":{"text":"@description: Stepper component with increase and decrease buttons\n@gif: https://media.giphy.com/media/3oFzm47bk0v4WV15O8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js"},"props":[{"name":"label","type":{"name":"string"},"description":{"text":"Text to show next to the current number"},"defaultValue":null},{"name":"min","type":{"name":"number"},"description":{"text":"Minimum value"},"defaultValue":null},{"name":"max","type":{"name":"number"},"description":{"text":"Maximum value"},"defaultValue":null},{"name":"containerStyle","type":{"name":"object"},"description":{"text":"Additional styles for the top container"},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"Handler function to receive updates when the value changes"},"defaultValue":null},{"name":"initialValue","type":{"name":"number"},"description":{"text":"the initial value"},"defaultValue":null}]}},{"node":{"displayName":"SharedArea","docblock":"","description":null,"props":[{"name":"renderDetails","type":{"name":"func"},"description":{"text":"render details screen"},"defaultValue":{"value":"_.noop"}}]}},{"node":{"displayName":"SourceElement","docblock":"","description":null,"props":[{"name":"data","type":{"name":"object"},"description":{"text":"Data to share between shared element and placeholder"},"defaultValue":null}]}},{"node":{"displayName":"TargetElement","docblock":"","description":null,"props":[]}},{"node":{"displayName":"NativePicker","docblock":"","description":null,"props":[]}},{"node":{"displayName":"PickerDialog","docblock":"","description":null,"props":[{"name":"selectedValue","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onDone","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onCancel","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"topBarProps","type":{"name":"object"},"description":null,"defaultValue":null},{"name":"children","type":{"name":"array"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"PickerDialog","docblock":"","description":null,"props":[{"name":"selectedValue","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onDone","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onCancel","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"children","type":{"name":"array"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Picker.Item","docblock":"@description: Picker.Item, for configuring the Picker's selectable options\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js","description":{"text":"@description: Picker.Item, for configuring the Picker's selectable options\n@extends: TouchableOpacity\n@extendslink: docs/TouchableOpacity\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js"},"props":[{"name":"label","type":{"name":"string"},"description":{"text":"[DEPRECATED - please include the label in the value prop] The item label"},"defaultValue":null},{"name":"value","type":{"name":"union"},"description":{"text":"The item value with the following format - {value: ..., label: ...},\nfor custom shape use getItemLabel, getItemValue props"},"defaultValue":null},{"name":"getItemLabel","type":{"name":"func"},"description":{"text":"Function to return the label out of the item value prop when value is custom shaped."},"defaultValue":null},{"name":"getItemValue","type":{"name":"func"},"description":{"text":"Function to return the value out of the item value prop when value is custom shaped."},"defaultValue":null},{"name":"isSelected","type":{"name":"bool"},"description":{"text":"Is the item selected"},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Is the item disabled"},"defaultValue":null},{"name":"renderItem","type":{"name":"func"},"description":{"text":"Render custom item"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Callback for onPress action"},"defaultValue":null},{"name":"onSelectedLayout","type":{"name":"func"},"description":{"text":"Callback for onLayout event"},"defaultValue":null}]}},{"node":{"displayName":"IGNORE","docblock":"","description":null,"props":[{"name":"topBarProps","type":{"name":"shape"},"description":null,"defaultValue":null},{"name":"scrollPosition","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"showSearch","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"searchStyle","type":{"name":"shape"},"description":null,"defaultValue":{"value":"{}"}},{"name":"searchPlaceholder","type":{"name":"string"},"description":null,"defaultValue":{"value":"'Search...'"}},{"name":"onSearchChange","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"renderCustomSearch","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"listProps","type":{"name":"object"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Picker","docblock":"@description: Picker Component, support single or multiple selection, blurModel and nativePicker\n@gif: https://media.giphy.com/media/3o751SiuZZiByET2lq/giphy.gif, https://media.giphy.com/media/TgMQnyw5grJIDohzvx/giphy.gif, https://media.giphy.com/media/5hsdmVptBRskZKn787/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js","description":{"text":"@description: Picker Component, support single or multiple selection, blurModel and nativePicker\n@gif: https://media.giphy.com/media/3o751SiuZZiByET2lq/giphy.gif, https://media.giphy.com/media/TgMQnyw5grJIDohzvx/giphy.gif, https://media.giphy.com/media/5hsdmVptBRskZKn787/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js"},"props":[{"name":"value","type":{"name":"union"},"description":{"text":"Picker current value in the shape of {value: ..., label: ...}, for custom shape use 'getItemValue' prop"},"defaultValue":null},{"name":"onChange","type":{"name":"func"},"description":{"text":"Callback for when picker value change"},"defaultValue":null},{"name":"mode","type":{"name":"enum"},"description":{"text":"SINGLE mode or MULTI mode"},"defaultValue":{"value":"'SINGLE'"}},{"name":"enableModalBlur","type":{"name":"bool"},"description":{"text":"Adds blur effect to picker modal (iOS only)"},"defaultValue":null},{"name":"renderPicker","type":{"name":"func"},"description":{"text":"Render custom picker"},"defaultValue":null},{"name":"renderItem","type":{"name":"func"},"description":{"text":"Render custom picker item"},"defaultValue":null},{"name":"customPickerProps","type":{"name":"object"},"description":{"text":"Custom picker props (when using renderPicker, will apply on the button wrapper)"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Add onPress callback for when pressing the picker"},"defaultValue":null},{"name":"getItemValue","type":{"name":"func"},"description":{"text":"A function that extract the unique value out of the value prop in case value has a custom structure"},"defaultValue":null},{"name":"getLabel","type":{"name":"func"},"description":{"text":"A function that returns the label to show for the selected Picker value"},"defaultValue":null},{"name":"topBarProps","type":{"name":"shape"},"description":{"text":"The picker modal top bar props"},"defaultValue":null},{"name":"showSearch","type":{"name":"bool"},"description":{"text":"Show search input to filter picker items by label"},"defaultValue":null},{"name":"searchStyle","type":{"name":"shape"},"description":{"text":"Style object for the search input (only when passing showSearch)"},"defaultValue":null},{"name":"searchPlaceholder","type":{"name":"string"},"description":{"text":"Placeholder text for the search input (only when passing showSearch)"},"defaultValue":null},{"name":"onSearchChange","type":{"name":"func"},"description":{"text":"callback for picker modal search input text change (only when passing showSearch)"},"defaultValue":null},{"name":"renderCustomSearch","type":{"name":"func"},"description":{"text":"Render custom search input (only when passing showSearch)"},"defaultValue":null},{"name":"useNativePicker","type":{"name":"bool"},"description":{"text":"Allow to use the native picker solution (different style for iOS and Android)"},"defaultValue":null},{"name":"renderNativePicker","type":{"name":"func"},"description":{"text":"Callback for rendering a custom native picker inside the dialog (relevant to native picker only)"},"defaultValue":null},{"name":"listProps","type":{"name":"object"},"description":{"text":"Pass props to the list component that wraps the picker options (allows to control FlatList behavior)"},"defaultValue":null}]}},{"node":{"displayName":"TagsInput","docblock":"@description: Tags input component (chips)\n@modifiers: Typography\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js","description":{"text":"@description: Tags input component (chips)\n@modifiers: Typography\n@gif: https://camo.githubusercontent.com/9c2671024f60566b980638ea01b517f6fb509d0b/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f336f45686e374a79685431566658746963452f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FormScreen.js"},"props":[{"name":"tags","type":{"name":"arrayOf"},"description":{"text":"list of tags. can be string or custom object when implementing getLabel"},"defaultValue":null},{"name":"getLabel","type":{"name":"func"},"description":{"text":"callback for extracting the label out of the tag item"},"defaultValue":null},{"name":"renderTag","type":{"name":"func"},"description":{"text":"callback for custom rendering tag item"},"defaultValue":null},{"name":"onChangeTags","type":{"name":"func"},"description":{"text":"callback for onChangeTags event"},"defaultValue":null},{"name":"onCreateTag","type":{"name":"func"},"description":{"text":"callback for creating new tag out of input value (good for composing tag object)"},"defaultValue":null},{"name":"onTagPress","type":{"name":"func"},"description":{"text":"callback for when pressing a tag in the following format (tagIndex, markedTagIndex) => {...}"},"defaultValue":null},{"name":"disableTagRemoval","type":{"name":"bool"},"description":{"text":"if true, tags *removal* Ux won't be available"},"defaultValue":null},{"name":"disableTagAdding","type":{"name":"bool"},"description":{"text":"if true, tags *adding* Ux (i.e. by 'submitting' the input text) won't be available"},"defaultValue":null},{"name":"containerStyle","type":{"name":"custom"},"description":{"text":"custom styling for the component container"},"defaultValue":null},{"name":"tagStyle","type":{"name":"custom"},"description":{"text":"custom styling for the tag item"},"defaultValue":null},{"name":"inputStyle","type":{"name":"custom"},"description":{"text":"custom styling for the text input"},"defaultValue":null},{"name":"hideUnderline","type":{"name":"bool"},"description":{"text":"should hide input underline"},"defaultValue":null}]}},{"node":{"displayName":"TouchableOpacity","docblock":"@description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\n@extends: TouchableOpacity\n@modifiers: margins, paddings, alignments, background, borderRadius\n@extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\n@gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.js","description":{"text":"@description: A wrapper for TouchableOpacity component. Support onPress, throttling and activeBackgroundColor\n@extends: TouchableOpacity\n@modifiers: margins, paddings, alignments, background, borderRadius\n@extendslink: https://facebook.github.io/react-native/docs/touchableopacity.html\n@gif: https://media.giphy.com/media/xULW8AMIgw7l31zjm8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/src/components/touchableOpacity/index.js"},"props":[{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"background color for TouchableOpacity"},"defaultValue":null},{"name":"throttleTime","type":{"name":"number"},"description":{"text":"throttle time in MS for onPress callback"},"defaultValue":null},{"name":"throttleOptions","type":{"name":"shape"},"description":{"text":"throttle options"},"defaultValue":null},{"name":"activeBackgroundColor","type":{"name":"string"},"description":{"text":"Apply background color on TouchableOpacity when active (press is on)"},"defaultValue":null}]}},{"node":{"displayName":"RadioButton","docblock":"A Radio Button component, should be wrapped inside a RadioGroup","description":{"text":"A Radio Button component, should be wrapped inside a RadioGroup"},"props":[{"name":"value","type":{"name":"union"},"description":{"text":"The identifier value of the radio button. must be different than other RadioButtons in the same group"},"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":{"text":"When using RadioButton without a RadioGroup, use this prop to toggle selection"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Invoked when pressing the button"},"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":{"text":"Whether the radio button should be disabled"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"The color of the radio button"},"defaultValue":null},{"name":"size","type":{"name":"number"},"description":{"text":"The size of the radio button, affect both width & height"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"The radio button border radius"},"defaultValue":null},{"name":"label","type":{"name":"string"},"description":{"text":"A label for the radio button description"},"defaultValue":null},{"name":"labelStyle","type":{"name":"union"},"description":{"text":"Label style"},"defaultValue":null},{"name":"iconSource","type":{"name":"union"},"description":{"text":"Icon image source"},"defaultValue":null},{"name":"iconStyle","type":{"name":"union"},"description":{"text":"Icon image style"},"defaultValue":null},{"name":"iconOnRight","type":{"name":"bool"},"description":{"text":"Should the icon be on the right side of the label"},"defaultValue":{"value":"false"}}]}},{"node":{"displayName":"RadioGroup","docblock":"Wrap a group of Radio Buttons to automatically control their selection","description":{"text":"Wrap a group of Radio Buttons to automatically control their selection"},"props":[{"name":"value","type":{"name":"union"},"description":{"text":"The value of the selected radio button\nDeprecated - please use initialValue instead"},"defaultValue":null},{"name":"initialValue","type":{"name":"union"},"description":{"text":"The initial value of the selected radio button"},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"Invoked once when value changes, by selecting one of the radio buttons in the group"},"defaultValue":null}]}},{"node":{"displayName":"TabBar.Item","docblock":"@description: TabBar.Item, inner component of TabBar for configuring the tabs\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js","description":{"text":"@description: TabBar.Item, inner component of TabBar for configuring the tabs\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js"},"props":[{"name":"icon","type":{"name":"number"},"description":{"text":"icon of the tab"},"defaultValue":null},{"name":"iconColor","type":{"name":"string"},"description":{"text":"icon tint color"},"defaultValue":null},{"name":"iconSelectedColor","type":{"name":"string"},"description":{"text":"icon selected tint color"},"defaultValue":null},{"name":"label","type":{"name":"string"},"description":{"text":"label of the tab"},"defaultValue":null},{"name":"labelStyle","type":{"name":"custom"},"description":{"text":"custom label style"},"defaultValue":null},{"name":"maxLines","type":{"name":"number"},"description":{"text":"maximun number of lines the label can break"},"defaultValue":{"value":"1"}},{"name":"selectedLabelStyle","type":{"name":"custom"},"description":{"text":"custom selected tab label style"},"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":{"text":"whether the tab is selected or not"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"callback for when pressing a tab"},"defaultValue":null},{"name":"showDivider","type":{"name":"bool"},"description":{"text":"whether the tab will have a divider on its right"},"defaultValue":null},{"name":"width","type":{"name":"number"},"description":{"text":"A fixed width for the item"},"defaultValue":null},{"name":"onLayout","type":{"name":"func"},"description":{"text":"A callback to invoke for onLayout event"},"defaultValue":null}]}},{"node":{"displayName":"TabBar","docblock":"@description: Basic TabBar component\n@gif: https://media.giphy.com/media/3o751YHFZVlv3Ay4k8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js","description":{"text":"@description: Basic TabBar component\n@gif: https://media.giphy.com/media/3o751YHFZVlv3Ay4k8/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js"},"props":[{"name":"selectedIndex","type":{"name":"number"},"description":{"text":"current selected tab index"},"defaultValue":{"value":"0"}},{"name":"style","type":{"name":"custom"},"description":{"text":"custom style for the tab bar"},"defaultValue":null},{"name":"indicatorStyle","type":{"name":"custom"},"description":{"text":"custom style for the selected indicator"},"defaultValue":null},{"name":"isContentIndicator","type":{"name":"bool"},"description":{"text":"whethere the indicator should mark item's content instead of the whole item's width"},"defaultValue":null},{"name":"ignoreLastTab","type":{"name":"bool"},"description":{"text":"whethere the indicator should mark the last tab or not (onTabSelected will return tab's index when selected)"},"defaultValue":null},{"name":"disableAnimatedTransition","type":{"name":"bool"},"description":{"text":"disable the animated transition of the tab indicator"},"defaultValue":null},{"name":"onChangeIndex","type":{"name":"func"},"description":{"text":"callback for when index has change (will not be called on last tab when passing ignoreLastTab)"},"defaultValue":null},{"name":"onTabSelected","type":{"name":"func"},"description":{"text":"callback for when tab selected"},"defaultValue":null},{"name":"mode","type":{"name":"enum"},"description":{"text":"FIT to force the content to fit to screen, or SCROLL to allow content overflow"},"defaultValue":{"value":"'FIT'"}},{"name":"useGradientFinish","type":{"name":"bool"},"description":{"text":"Add gradiant effect for scroll overflow. IMPORTANT: must have a native module available!"},"defaultValue":null},{"name":"enableShadow","type":{"name":"bool"},"description":{"text":"Show Tab Bar bottom shadow (iOS only)"},"defaultValue":null},{"name":"height","type":null,"description":null,"defaultValue":{"value":"51"}}]}},{"node":{"displayName":"IGNORE","docblock":"","description":null,"props":[{"name":"items","type":{"name":"array"},"description":null,"defaultValue":null},{"name":"selectedValue","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"title","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"onCancel","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onSelect","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Text","docblock":"@description: A wrapper for Text component with extra functionality like modifiers support\n@extends: Text\n@extendslink: https://facebook.github.io/react-native/docs/text.html\n@modifiers: margins, color, typography","description":{"text":"@description: A wrapper for Text component with extra functionality like modifiers support\n@extends: Text\n@extendslink: https://facebook.github.io/react-native/docs/text.html\n@modifiers: margins, color, typography"},"props":[{"name":"color","type":{"name":"string"},"description":{"text":"color of the text"},"defaultValue":null},{"name":"center","type":{"name":"bool"},"description":{"text":"whether to center the text (using textAlign)"},"defaultValue":null},{"name":"uppercase","type":{"name":"bool"},"description":{"text":"whether to change the text to uppercase"},"defaultValue":null}]}},{"node":{"displayName":"View","docblock":"@description: Wrapper component for React Native View component\n@extends: View\n@extendslink: https://facebook.github.io/react-native/docs/view.html\n@modifiers: margins, paddings, alignments, background, borderRadius","description":{"text":"@description: Wrapper component for React Native View component\n@extends: View\n@extendslink: https://facebook.github.io/react-native/docs/view.html\n@modifiers: margins, paddings, alignments, background, borderRadius"},"props":[{"name":"useSafeArea","type":{"name":"bool"},"description":{"text":"if true, will render as SafeAreaView"},"defaultValue":null}]}},{"node":{"displayName":"Toast","docblock":"@description Toast component for showing a feedback about a user action.\n@extends: Animatable.View\n@extendslink: https://github.com/oblador/react-native-animatable\n@gif: https://media.giphy.com/media/3oFzm1pKqGXybiDUre/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ToastsScreen.js","description":null,"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Whether to show or hide the toast"},"defaultValue":null},{"name":"position","type":{"name":"enum"},"description":{"text":"The position of the toast. top or bottom"},"defaultValue":{"value":"'top'"}},{"name":"height","type":{"name":"number"},"description":{"text":"The height of the toast"},"defaultValue":null},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"The background color of the toast"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"the toast content color (message, actions labels)"},"defaultValue":{"value":"Colors.white"}},{"name":"message","type":{"name":"string"},"description":{"text":"the toast message"},"defaultValue":null},{"name":"messageStyle","type":{"name":"union"},"description":{"text":"a custom style for the toast message"},"defaultValue":null},{"name":"icon","type":{"name":"number"},"description":{"text":"a left icon"},"defaultValue":null},{"name":"actions","type":{"name":"arrayOf"},"description":{"text":"one or two actions for the user to display in the toast"},"defaultValue":null},{"name":"onDismiss","type":{"name":"func"},"description":{"text":"callback for dismiss action"},"defaultValue":null},{"name":"autoDismiss","type":{"name":"number"},"description":{"text":"number of milliseconds to automatically invoke the onDismiss callback"},"defaultValue":null},{"name":"allowDismiss","type":{"name":"bool"},"description":{"text":"show dismiss action"},"defaultValue":null},{"name":"onAnimationEnd","type":{"name":"func"},"description":{"text":"callback for end of component animation"},"defaultValue":null},{"name":"renderContent","type":{"name":"func"},"description":{"text":"render a custom toast content (better use with StyleSheet.absoluteFillObject to support safe area)"},"defaultValue":null},{"name":"centerMessage","type":{"name":"bool"},"description":{"text":"should message be centered in the toast"},"defaultValue":null},{"name":"animated","type":{"name":"bool"},"description":{"text":"should the toast appear/disappear with animation"},"defaultValue":{"value":"true"}},{"name":"enableBlur","type":{"name":"bool"},"description":{"text":"enable blur effect for Toast"},"defaultValue":null},{"name":"blurOptions","type":{"name":"object"},"description":{"text":"blur option for blur effect according to react-native-blur lib (make sure enableBlur is on)"},"defaultValue":null},{"name":"zIndex","type":{"name":"number"},"description":{"text":"custom zIndex for toast"},"defaultValue":{"value":"100"}}]}},{"node":{"displayName":"Tour","docblock":"[WIP] a Tour component for feature discoverability","description":{"text":"[WIP] a Tour component for feature discoverability"},"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Whether to show the tour or not"},"defaultValue":{"value":"false"}},{"name":"onClose","type":{"name":"func"},"description":{"text":"callback for closing the tour"},"defaultValue":null},{"name":"overlayColor","type":{"name":"string"},"description":{"text":"The overlay background color"},"defaultValue":{"value":"Colors.white"}},{"name":"overlayOpacity","type":{"name":"number"},"description":{"text":"The overlay opacity"},"defaultValue":{"value":"0.9"}},{"name":"message","type":{"name":"string"},"description":{"text":"the message to show next to the target component"},"defaultValue":null},{"name":"messageStyle","type":{"name":"union"},"description":{"text":"the message custom style"},"defaultValue":null}]}},{"node":{"displayName":"AnimatedImage","docblock":"@description: Image component that fades-in the image with animation once it's loaded\n@extends: Animated.Image\n@gif: https://media.giphy.com/media/l0HU7jj0ivEFyZIA0/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AnimatedImageScreen.js","description":{"text":"@description: Image component that fades-in the image with animation once it's loaded\n@extends: Animated.Image\n@gif: https://media.giphy.com/media/l0HU7jj0ivEFyZIA0/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/AnimatedImageScreen.js"},"props":[{"name":"containerStyle","type":{"name":"union"},"description":{"text":"Additional spacing styles for the container"},"defaultValue":null},{"name":"imageStyle","type":{"name":"object"},"description":{"text":"Style for the image component"},"defaultValue":null},{"name":"imageSource","type":{"name":"union"},"description":{"text":"The image source (external or assets)"},"defaultValue":null},{"name":"animationDuration","type":{"name":"number"},"description":{"text":"Duration for the fade animation when the image is loaded"},"defaultValue":{"value":"300"}},{"name":"loader","type":{"name":"element"},"description":{"text":"A component to render while the image is loading"},"defaultValue":null},{"name":"testId","type":{"name":"string"},"description":{"text":"Use to identify the avatar in tests"},"defaultValue":null}]}},{"node":{"displayName":"FeatureHighlight","docblock":"@description: FeatureHighlight component for feature discovery\n@notes: 1) FeatureHighlight component must be a direct child of the root view returned in render().; 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\n@important: FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see\n@importantLink: https://facebook.github.io/react-native/docs/linking-libraries-ios.html\n@extends: HighlighterOverlayView\n@extendslink: docs/HighlighterOverlayView\n@gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js","description":{"text":"@description: FeatureHighlight component for feature discovery\n@notes: 1) FeatureHighlight component must be a direct child of the root view returned in render().; 2) If the element to be highlighted doesn't have a style attribute add 'style={{opacity: 1}}' so the Android OS can detect it.\n@important: FeatureHighlight uses a native library. You MUST add and link the native library to both iOS and Android projects. For instruction please see\n@importantLink: https://facebook.github.io/react-native/docs/linking-libraries-ios.html\n@extends: HighlighterOverlayView\n@extendslink: docs/HighlighterOverlayView\n@gif: https://media.giphy.com/media/3ohs4D5irZm5GojsDS/giphy.gif, https://media.giphy.com/media/3oxQNaDQckPZI78rWo/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/FeatureHighlightScreen.js"},"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Boolean to determine if to present the feature highlight component"},"defaultValue":null},{"name":"highlightFrame","type":{"name":"shape"},"description":{"text":"Frame of the area to highlight {x, y, width, height}"},"defaultValue":null},{"name":"getTarget","type":{"name":"func"},"description":{"text":"Callback that extract the ref of the element to be highlighted"},"defaultValue":null},{"name":"title","type":{"name":"string"},"description":{"text":"Title of the content to be displayed"},"defaultValue":null},{"name":"message","type":{"name":"string"},"description":{"text":"Message to be displayed"},"defaultValue":null},{"name":"titleNumberOfLines","type":{"name":"number"},"description":{"text":"Title's max number of lines"},"defaultValue":null},{"name":"messageNumberOfLines","type":{"name":"number"},"description":{"text":"Message's max number of lines"},"defaultValue":null},{"name":"confirmButtonProps","type":{"name":"object"},"description":{"text":"Props that will be passed to the dismiss button"},"defaultValue":null},{"name":"onBackgroundPress","type":{"name":"func"},"description":{"text":"Callback for the background press"},"defaultValue":null},{"name":"overlayColor","type":{"name":"string"},"description":{"text":"Color of the content's background (usually includes alpha for transparency)"},"defaultValue":null},{"name":"textColor","type":{"name":"string"},"description":{"text":"Color of the content's text"},"defaultValue":null},{"name":"borderColor","type":{"name":"string"},"description":{"text":"Color of the border around the highlighted element"},"defaultValue":null},{"name":"borderWidth","type":{"name":"number"},"description":{"text":"Width of the border around the highlighted element"},"defaultValue":null},{"name":"minimumRectSize","type":{"name":"shape"},"description":{"text":"The minimum size of the highlighted component (Android API 21+, and only when passing a ref in 'getTarget')"},"defaultValue":{"value":"{width: 56, height: 56}"}},{"name":"innerPadding","type":{"name":"number"},"description":{"text":"The padding of the highlight frame around the highlighted element's frame (only when passing ref in 'getTarget')"},"defaultValue":{"value":"10"}}]}},{"node":{"displayName":"ConnectionStatusBar","docblock":"@description: Top bar to show a \"no internet\" connection status. Note: Run on real device for best results\n@image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.js","description":{"text":"@description: Top bar to show a \"no internet\" connection status. Note: Run on real device for best results\n@image: https://user-images.githubusercontent.com/33805983/34683190-f3b1904c-f4a9-11e7-9d46-9a340bd35448.png, https://user-images.githubusercontent.com/33805983/34484206-edc6c6e4-efcb-11e7-88b2-cd394c19dd5e.png\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/ConnectionStatusBarScreen.js"},"props":[{"name":"label","type":{"name":"string"},"description":{"text":"Text to show as the status"},"defaultValue":{"value":"'No internet. Check your connection.'"}},{"name":"onConnectionChange","type":{"name":"func"},"description":{"text":"Handler to get connection change events propagation"},"defaultValue":null},{"name":"allowDismiss","type":{"name":"bool"},"description":{"text":"Text to show as the status"},"defaultValue":{"value":"false"}},{"name":"useAbsolutePosition","type":{"name":"bool"},"description":{"text":"Use absolute position for the component"},"defaultValue":{"value":"true"}}]}},{"node":{"displayName":"MaskedInput","docblock":"@description: Mask Input to create custom looking inputs with custom formats\n@extends: TextInput\n@extendslink: docs/TagsInput\n@gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.js","description":{"text":"@description: Mask Input to create custom looking inputs with custom formats\n@extends: TextInput\n@extendslink: docs/TagsInput\n@gif: https://camo.githubusercontent.com/61eedb65e968845d5eac713dcd21a69691571fb1/68747470733a2f2f6d656469612e67697068792e636f6d2f6d656469612f4b5a5a7446666f486f454b334b2f67697068792e676966\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/MaskedInputScreen.js"},"props":[{"name":"renderMaskedText","type":{"name":"func"},"description":{"text":"callback for rendering the custom input out of the value returns from the actual input"},"defaultValue":null},{"name":"containerStyle","type":{"name":"custom"},"description":{"text":"container style for the masked input container"},"defaultValue":null}]}},{"node":{"displayName":"TextArea","docblock":"@description: a wrapper for Text Input component to create enclosed text area\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/3oFzmoU8TdfHeYZNZu/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js","description":{"text":"@description: a wrapper for Text Input component to create enclosed text area\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/3oFzmoU8TdfHeYZNZu/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js"},"props":[]}},{"node":{"displayName":"TextField","docblock":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js","description":{"text":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js"},"props":[{"name":"floatingPlaceholder","type":{"name":"bool"},"description":{"text":"should placeholder have floating behavior"},"defaultValue":null},{"name":"floatingPlaceholderColor","type":{"name":"union"},"description":{"text":"floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"helperText","type":{"name":"string"},"description":{"text":"This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\nas well (NOT for expandable textInputs)"},"defaultValue":null},{"name":"hideUnderline","type":{"name":"bool"},"description":{"text":"hide text input underline, by default false"},"defaultValue":null},{"name":"underlineColor","type":{"name":"union"},"description":{"text":"underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"disabledColor","type":{"name":"string"},"description":{"text":"the color of all text when the input is disabled (if undefined will not apply color)"},"defaultValue":null},{"name":"centered","type":{"name":"bool"},"description":{"text":"should text input be align to center"},"defaultValue":null},{"name":"error","type":{"name":"string"},"description":{"text":"input error message, should be empty if no error exists"},"defaultValue":null},{"name":"enableErrors","type":{"name":"bool"},"description":{"text":"should the input component support error messages"},"defaultValue":{"value":"true"}},{"name":"expandable","type":{"name":"bool"},"description":{"text":"should the input expand to another text area modal"},"defaultValue":null},{"name":"renderExpandableInput","type":{"name":"func"},"description":{"text":"Render custom expandable input (requires expandable to be true)"},"defaultValue":null},{"name":"renderExpandable","type":{"name":"func"},"description":{"text":"allow custom rendering of expandable content when clicking on the input (useful for pickers)\naccept props and state as params, ex. (props, state) => {...}\nuse toggleExpandableModal(false) method to toggle off the expandable content"},"defaultValue":null},{"name":"onToggleExpandableModal","type":{"name":"func"},"description":{"text":"Callback for the modal toggle. Pass with renderExpandable to control the modal toggle"},"defaultValue":null},{"name":"topBarProps","type":{"name":"shape"},"description":{"text":"The picker modal top bar props"},"defaultValue":null},{"name":"transformer","type":{"name":"func"},"description":{"text":"transform function executed on value and return transformed value"},"defaultValue":null},{"name":"title","type":{"name":"string"},"description":{"text":"Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')"},"defaultValue":null},{"name":"titleColor","type":{"name":"union"},"description":{"text":"The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"titleStyle","type":{"name":"union"},"description":{"text":"Additional styles for the title (not including 'color')"},"defaultValue":null},{"name":"showCharacterCounter","type":{"name":"bool"},"description":{"text":"should the input display a character counter (only when passing 'maxLength')"},"defaultValue":null},{"name":"floatOnFocus","type":{"name":"bool"},"description":{"text":"should float the placeholer when focused (instead of when typing)"},"defaultValue":null},{"name":"useTopErrors","type":{"name":"bool"},"description":{"text":"should the errors be displayed at the top"},"defaultValue":null},{"name":"rightIconSource","type":{"name":"union"},"description":{"text":"Icon asset source for showing on the right side, appropriate for dropdown icon and such"},"defaultValue":null},{"name":"rightButtonProps","type":{"name":"shape"},"description":{"text":"Props for the right button {iconSource, onPress, style}"},"defaultValue":null},{"name":"placeholderTextColor","type":null,"description":null,"defaultValue":{"value":"Colors.dark40"}}]}},{"node":{"displayName":"TextInput","docblock":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js","description":{"text":"@description: A wrapper for Text Input component with extra functionality like floating placeholder\n@extends: TextInput\n@extendslink: https://facebook.github.io/react-native/docs/textinput.html\n@modifiers: Typography\n@gif: https://media.giphy.com/media/xULW8su8Cs5Z9Fq4PS/giphy.gif, https://media.giphy.com/media/3ohc1dhDcLS9FvWLJu/giphy.gif, https://media.giphy.com/media/oNUSOxnHdMP5ZnKYsh/giphy.gif\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/InputsScreen.js"},"props":[{"name":"floatingPlaceholder","type":{"name":"bool"},"description":{"text":"should placeholder have floating behavior"},"defaultValue":null},{"name":"floatingPlaceholderColor","type":{"name":"union"},"description":{"text":"floating placeholder color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"helperText","type":{"name":"string"},"description":{"text":"This text will appear as a placeholder when the textInput becomes focused, only when passing floatingPlaceholder\nas well (NOT for expandable textInputs)"},"defaultValue":null},{"name":"hideUnderline","type":{"name":"bool"},"description":{"text":"hide text input underline, by default false"},"defaultValue":null},{"name":"underlineColor","type":{"name":"union"},"description":{"text":"underline color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"disabledColor","type":{"name":"string"},"description":{"text":"the color of all text when the input is disabled (if undefined will not apply color)"},"defaultValue":null},{"name":"centered","type":{"name":"bool"},"description":{"text":"should text input be align to center"},"defaultValue":null},{"name":"error","type":{"name":"string"},"description":{"text":"input error message, should be empty if no error exists"},"defaultValue":null},{"name":"enableErrors","type":{"name":"bool"},"description":{"text":"should the input component support error messages"},"defaultValue":{"value":"true"}},{"name":"expandable","type":{"name":"bool"},"description":{"text":"should the input expand to another text area modal"},"defaultValue":null},{"name":"renderExpandableInput","type":{"name":"func"},"description":{"text":"Render custom expandable input (requires expandable to be true)"},"defaultValue":null},{"name":"renderExpandable","type":{"name":"func"},"description":{"text":"allow custom rendering of expandable content when clicking on the input (useful for pickers)\naccept props and state as params, ex. (props, state) => {...}\nuse toggleExpandableModal(false) method to toggle off the expandable content"},"defaultValue":null},{"name":"transformer","type":{"name":"func"},"description":{"text":"transform function executed on value and return transformed value"},"defaultValue":null},{"name":"title","type":{"name":"string"},"description":{"text":"Fixed title that will displayed above the input (note: floatingPlaceholder MUST be 'false')"},"defaultValue":null},{"name":"titleColor","type":{"name":"union"},"description":{"text":"The title's color as a string or object of states, ex. {default: 'black', error: 'red', focus: 'blue'}"},"defaultValue":null},{"name":"titleStyle","type":{"name":"union"},"description":{"text":"Additional styles for the title (not including 'color')"},"defaultValue":null},{"name":"showCharacterCounter","type":{"name":"bool"},"description":{"text":"should the input display a character counter (only when passing 'maxLength')"},"defaultValue":null},{"name":"floatOnFocus","type":{"name":"bool"},"description":{"text":"should float the placeholer when focused (instead of when typing)"},"defaultValue":null},{"name":"useTopErrors","type":{"name":"bool"},"description":{"text":"should the errors be displayed at the top"},"defaultValue":null},{"name":"rightIconSource","type":{"name":"union"},"description":{"text":"Icon asset source for showing on the right side, appropriate for dropdown icon and such"},"defaultValue":null},{"name":"placeholderTextColor","type":null,"description":null,"defaultValue":{"value":"Colors.dark40"}}]}},{"node":{"displayName":"AnimatedFeedback","docblock":"","description":null,"props":[{"name":"duration","type":{"name":"number"},"description":{"text":"time in mili-seconds of each star animation"},"defaultValue":{"value":"1300"}},{"name":"starSize","type":{"name":"number"},"description":{"text":"the star size(width x height)"},"defaultValue":{"value":"40"}},{"name":"onChangeRating","type":{"name":"func"},"description":{"text":"callback for when rating has changed"},"defaultValue":null}]}},{"node":{"displayName":"Star","docblock":"","description":null,"props":[{"name":"index","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"rating","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"duration","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"starSize","type":{"name":"number"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Avatar","docblock":"","description":null,"props":[{"name":"anonymousVisitorAvatarId","type":{"name":"number"},"description":{"text":"Anonymous visitor Avatar Id"},"defaultValue":null},{"name":"index","type":{"name":"number"},"description":{"text":"Index number"},"defaultValue":null},{"name":"gifOverlayColor","type":{"name":"string"},"description":{"text":"Avatar gif overlay color (Android only)"},"defaultValue":{"value":"Colors.white"}},{"name":"imageId","type":{"name":"string"},"description":{"text":"ImageId identifier"},"defaultValue":null},{"name":"size","type":{"name":"union"},"description":{"text":"Avatar size"},"defaultValue":null},{"name":"animate","type":null,"description":null,"defaultValue":{"value":"true"}}]}},{"node":{"displayName":"AnimatedImage","docblock":"","description":null,"props":[]}},{"node":{"displayName":"AutocompleteList","docblock":"","description":null,"props":[{"name":"filterString","type":{"name":"string"},"description":{"text":"The string to filter by"},"defaultValue":null},{"name":"items","type":{"name":"arrayOf"},"description":{"text":"list of items to show"},"defaultValue":null},{"name":"defaultItems","type":{"name":"arrayOf"},"description":{"text":"Default items to show when there are no matching results (default is ['No Results'])"},"defaultValue":{"value":"['No Results']"}},{"name":"onItemPress","type":{"name":"func"},"description":{"text":"On press action for when clicking an item"},"defaultValue":null},{"name":"showDefaultItemsOnStart","type":{"name":"bool"},"description":{"text":"Whether to show default items on start"},"defaultValue":null}]}},{"node":{"displayName":"AvatarStrip","docblock":"@description: A strip of avatars with an overlay","description":{"text":"@description: A strip of avatars with an overlay"},"props":[{"name":"avatars","type":{"name":"arrayOf"},"description":{"text":"The list of avatars props"},"defaultValue":null},{"name":"avatarSize","type":{"name":"number"},"description":{"text":"the avatars size"},"defaultValue":null},{"name":"overlapSize","type":{"name":"number"},"description":{"text":"The overlapping size"},"defaultValue":{"value":"Spacings.s1"}},{"name":"lastAvatarLabel","type":{"name":"union"},"description":{"text":"overlay label for the last avatar"},"defaultValue":null},{"name":"lastAvatarOverlayColor","type":{"name":"string"},"description":{"text":"overlay color for the last avatar"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"The whole strip container style"},"defaultValue":null}]}},{"node":{"displayName":"Banner","docblock":"@description: A Banner component","description":{"text":"@description: A Banner component"},"props":[{"name":"color","type":{"name":"string"},"description":{"text":"The component content color (message, actions labels)"},"defaultValue":null},{"name":"message","type":{"name":"union"},"description":{"text":"The component message"},"defaultValue":null},{"name":"icon","type":{"name":"number"},"description":{"text":"A left icon"},"defaultValue":null},{"name":"actionLabel","type":{"name":"string"},"description":{"text":"The button label"},"defaultValue":null},{"name":"showNext","type":{"name":"bool"},"description":{"text":"Show next action (right shevron button) - showDismiss must be false"},"defaultValue":null},{"name":"showDismiss","type":{"name":"bool"},"description":{"text":"Show dismiss action (right 'X' button)"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Callback for dismiss action"},"defaultValue":null},{"name":"warning","type":{"name":"bool"},"description":{"text":"Show as a 'Warning' Banner<br>\nDeprecated - please use messageType instead"},"defaultValue":null},{"name":"messageType","type":{"name":"enum"},"description":{"text":"Show as 'DEFAULT', 'WARNING' or 'ERROR' Banner"},"defaultValue":null}]}},{"node":{"displayName":"CollapsingHeader","docblock":"","description":null,"props":[{"name":"angle","type":{"name":"number"},"description":{"text":"The angle of the diagonal header"},"defaultValue":{"value":"-10"}},{"name":"stickyHeader","type":{"name":"element"},"description":{"text":"A sticky header element that scrolls with the header but sticks to the top of the screen"},"defaultValue":null},{"name":"stickyHeaderHeight","type":{"name":"number"},"description":{"text":"The sticky header height"},"defaultValue":{"value":"0"}},{"name":"headerHeight","type":{"name":"number"},"description":{"text":"The total header height"},"defaultValue":{"value":"180"}},{"name":"renderHeaderContent","type":{"name":"func"},"description":{"text":"Render custom header content"},"defaultValue":null},{"name":"headerContentHeight","type":{"name":"number"},"description":{"text":"Height to add for custom header content"},"defaultValue":{"value":"0"}},{"name":"useFixedHeaderContent","type":{"name":"bool"},"description":{"text":"Whether the header content should be fixed or scroll with the rest of the content (default: true)"},"defaultValue":{"value":"true"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"If you want your screen to have a background color different than transparent/white please use this prop"},"defaultValue":{"value":"Colors.white"}},{"name":"diagonalColor","type":{"name":"string"},"description":{"text":"The diagonal color"},"defaultValue":null},{"name":"headerColor","type":{"name":"string"},"description":{"text":"TODO: depreciate this prop\nThe header background color, by default it's transparent"},"defaultValue":null},{"name":"headerImage","type":{"name":"union"},"description":{"text":"image to display on top of the header"},"defaultValue":null},{"name":"contentBeforeHeader","type":{"name":"bool"},"description":{"text":"should content render on top of the header (default: true)"},"defaultValue":{"value":"true"}},{"name":"onChangeState","type":{"name":"func"},"description":{"text":"Callback for state changes (COLLAPSED | OPEN)"},"defaultValue":null},{"name":"containerWidth","type":{"name":"number"},"description":{"text":"For custom container width (default is screen width)"},"defaultValue":{"value":"Constants.screenWidth"}},{"name":"contentOffset","type":{"name":"number"},"description":{"text":"extra content offset"},"defaultValue":{"value":"0"}},{"name":"collapsingChildContainerStyle","type":{"name":"union"},"description":{"text":"Container style to pass to all collapsing children"},"defaultValue":null},{"name":"drawBehindTopBar","type":{"name":"bool"},"description":{"text":"Is collapsing header being drawn behind Navigation topBar"},"defaultValue":null}]}},{"node":{"displayName":"CollapsingHeader","docblock":"","description":null,"props":[{"name":"angle","type":{"name":"number"},"description":{"text":"The angle of the diagonal header"},"defaultValue":{"value":"-10"}},{"name":"stickyHeader","type":{"name":"element"},"description":{"text":"A sticky header element that scrolls with the header but sticks to the top of the screen"},"defaultValue":null},{"name":"stickyHeaderHeight","type":{"name":"number"},"description":{"text":"The sticky header height"},"defaultValue":{"value":"0"}},{"name":"headerHeight","type":{"name":"number"},"description":{"text":"The total header height"},"defaultValue":{"value":"180"}},{"name":"renderHeaderContent","type":{"name":"func"},"description":{"text":"Render custom header content"},"defaultValue":null},{"name":"headerContentHeight","type":{"name":"number"},"description":{"text":"Height to add for custom header content"},"defaultValue":{"value":"0"}},{"name":"useFixedHeaderContent","type":{"name":"bool"},"description":{"text":"Whether the header content should be fixed or scroll with the rest of the content (default: true)"},"defaultValue":{"value":"true"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"If you want your screen to have a background color different than transparent/white please use this prop"},"defaultValue":null},{"name":"diagonalColor","type":{"name":"string"},"description":{"text":"The diagonal color"},"defaultValue":null},{"name":"headerColor","type":{"name":"string"},"description":{"text":"The header background color, by default it's transparent"},"defaultValue":null},{"name":"contentBeforeHeader","type":{"name":"bool"},"description":{"text":"should content render on top of the header (default: true)"},"defaultValue":{"value":"true"}},{"name":"onChangeState","type":{"name":"func"},"description":{"text":"Callback for state changes (COLLAPSED | OPEN)"},"defaultValue":null},{"name":"containerWidth","type":{"name":"number"},"description":{"text":"For custom container width (default is screen width)"},"defaultValue":{"value":"Constants.screenWidth"}},{"name":"contentOffset","type":{"name":"number"},"description":{"text":"extra content offset"},"defaultValue":{"value":"0"}},{"name":"collapsingChildContainerStyle","type":{"name":"union"},"description":{"text":"Container style to pass to all collapsing children"},"defaultValue":null}]}},{"node":{"displayName":"ColorPalette","docblock":"@description: A color palette component","description":{"text":"@description: A color palette component"},"props":[{"name":"colors","type":{"name":"arrayOf"},"description":{"text":"Array of colors to render in the palette"},"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":{"text":"Style to pass the palette container"},"defaultValue":null},{"name":"usePagination","type":{"name":"bool"},"description":{"text":"Whether to use pagination when number of colors exceeds 3 rows"},"defaultValue":{"value":"true"}},{"name":"swatchStyle","type":{"name":"union"},"description":{"text":"Style to pass all the ColorSwatches in the palette"},"defaultValue":null},{"name":"value","type":{"name":"union"},"description":{"text":"The value of the selected swatch"},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"Invoked once when value changes by selecting one of the swatches in the palette"},"defaultValue":null}]}},{"node":{"displayName":"ColorPicker","docblock":"@description: A color picker component","description":{"text":"@description: A color picker component"},"props":[{"name":"colors","type":{"name":"arrayOf"},"description":{"text":"Array of colors for the picker's color palette (hex values)"},"defaultValue":null},{"name":"removeSelection","type":{"name":"bool"},"description":{"text":"remove selection mark from the color palette"},"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":{"text":"onValueChange callback for the picker's color palette change"},"defaultValue":null},{"name":"initialColor","type":{"name":"string"},"description":{"text":"The initial color to pass the picker dialog"},"defaultValue":{"value":"Colors.dark80"}},{"name":"onSubmit","type":{"name":"func"},"description":{"text":"onSubmit callback for the picker dialog color change"},"defaultValue":null}]}},{"node":{"displayName":"ColorSwatch","docblock":"@description: A color swatch component","description":{"text":"@description: A color swatch component"},"props":[{"name":"value","type":{"name":"union"},"description":{"text":"The identifier value of the ColorSwatch in a ColorSwatch palette. must be different than other ColorSwatches in the same group."},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"The color of the ColorSwatch."},"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":{"text":"Is the initial state is selected."},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"onPress callback"},"defaultValue":null}]}},{"node":{"displayName":"ConnectivityBar","docblock":"","description":null,"props":[{"name":"isConnected","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"containerStyle","type":{"name":"union"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"DurationPicker","docblock":"a duration picker for picking time based on hours and minutes","description":{"text":"a duration picker for picking time based on hours and minutes"},"props":[{"name":"value","type":{"name":"shape"},"description":{"text":"the current value in a shape of {hours, minutes}"},"defaultValue":null},{"name":"onChange","type":{"name":"func"},"description":{"text":"on value change callback, e.g ({hours, minutes}) => {}"},"defaultValue":null},{"name":"onHoursChange","type":{"name":"func"},"description":{"text":"on hours change callback, e.g ({hours}) => {}"},"defaultValue":null},{"name":"onMinutesChange","type":{"name":"func"},"description":{"text":"on minutes change callback, e.g ({minutes}) => {}"},"defaultValue":null},{"name":"maxHours","type":{"name":"number"},"description":{"text":"max of available hours to display in the picker (default 12)"},"defaultValue":{"value":"12"}},{"name":"hourOptions","type":{"name":"arrayOf"},"description":{"text":"a list of hours to pick from"},"defaultValue":null},{"name":"minuteOptions","type":{"name":"arrayOf"},"description":{"text":"a list of minutes to pick from"},"defaultValue":null},{"name":"getLabel","type":{"name":"func"},"description":{"text":"callback for rendering the picker current value (based on Picker prop Types)"},"defaultValue":null}]}},{"node":{"displayName":"Divider","docblock":"","description":null,"props":[]}},{"node":{"displayName":"FormField","docblock":"","description":null,"props":[{"name":"id","type":{"name":"string"},"description":{"text":"Used to construct form data object and assign initialValue"},"defaultValue":null},{"name":"component","type":{"name":"func"},"description":{"text":"Input component to render"},"defaultValue":null}]}},{"node":{"displayName":"FlatList","docblock":"","description":null,"props":[]}},{"node":{"displayName":"Form","docblock":"","description":null,"props":[{"name":"initialValues","type":{"name":"object"},"description":{"text":"Initial values for the form fields {fieldName: value}"},"defaultValue":{"value":"{}"}},{"name":"validate","type":{"name":"object"},"description":{"text":"Validation rules for ui-lib inputs {fieldName: {validator, errorMessage}}"},"defaultValue":{"value":"{}"}},{"name":"onSubmit","type":{"name":"func"},"description":{"text":"Callback with form data on form submit"},"defaultValue":null},{"name":"onChangeValidity","type":{"name":"func"},"description":{"text":"Callback with validation status (formValid, fieldValidity)"},"defaultValue":null},{"name":"onChangeDirty","type":{"name":"func"},"description":{"text":"Callback with form dirtiness (isDirty)"},"defaultValue":null},{"name":"validateOnBlur","type":{"name":"bool"},"description":{"text":"Validate form fields on blur (overridable individually)"},"defaultValue":null},{"name":"validateOnChange","type":{"name":"bool"},"description":{"text":"Validate form fields on change (overridable individually)"},"defaultValue":null},{"name":"validateOnStart","type":{"name":"bool"},"description":{"text":"Validate form fields on start (overridable individually)"},"defaultValue":null}]}},{"node":{"displayName":"InAppNotification","docblock":"","description":null,"props":[{"name":"title","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"message","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"avatarProps","type":{"name":"object"},"description":null,"defaultValue":null},{"name":"imageProps","type":{"name":"object"},"description":null,"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onDismiss","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"autoDismiss","type":{"name":"number"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"Label","docblock":"","description":null,"props":[{"name":"icon","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"text","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"color","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"backgroundColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"size","type":{"name":"enum"},"description":null,"defaultValue":{"value":"24"}},{"name":"onDismiss","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"dismissColor","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"LocationPicker","docblock":"","description":null,"props":[{"name":"mapSettings","type":{"name":"shape"},"description":null,"defaultValue":{"value":"{\n  height: 96,\n  zoom: 14\n}"}},{"name":"hideMap","type":{"name":"bool"},"description":null,"defaultValue":{"value":"false"}},{"name":"displayMode","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onChange","type":{"name":"func"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"DraggableItem","docblock":"","description":null,"props":[]}},{"node":{"displayName":"Loader","docblock":"@description: Loader component for both progress and activity indication. Note\nthat you'll need Lottie as native dependency in your demo app, see\nhttps://github.com/wix-private/wix-react-native-ui-lib#lottie-native-dependency\n@extends: LottieAnimation\n@example: LoadersScreen.js","description":{"text":"@description: Loader component for both progress and activity indication. Note\nthat you'll need Lottie as native dependency in your demo app, see\nhttps://github.com/wix-private/wix-react-native-ui-lib#lottie-native-dependency\n@extends: LottieAnimation\n@example: LoadersScreen.js"},"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Whether to show the loader or not (only when overlay is true)"},"defaultValue":null},{"name":"overlay","type":{"name":"bool"},"description":{"text":"Use loader as overlay on another view (will automatically size the loader relative to the view's)"},"defaultValue":null},{"name":"type","type":{"name":"enum"},"description":{"text":"The type of loader to use (indeterminate | progress)"},"defaultValue":null},{"name":"size","type":{"name":"enum"},"description":{"text":"Size of the loader (small | medium | large)"},"defaultValue":{"value":"'medium'"}},{"name":"showBackground","type":{"name":"bool"},"description":{"text":"Whether the loader will have a round white background (only when overlay is false)"},"defaultValue":{"value":"false"}},{"name":"overlayBackground","type":{"name":"string"},"description":{"text":"control the overlay background"},"defaultValue":null},{"name":"progress","type":{"name":"number"},"description":{"text":"the current animation progress (0-1)"},"defaultValue":null},{"name":"message","type":{"name":"string"},"description":{"text":"A message to be displayed under loader"},"defaultValue":null},{"name":"labelStyle","type":{"name":"union"},"description":{"text":"Additional styles for label text"},"defaultValue":null}]}},{"node":{"displayName":"MapView","docblock":"","description":null,"props":[{"name":"mapSettings","type":{"name":"shape"},"description":{"text":"object contains the zoom, width and height of the map"},"defaultValue":{"value":"{\n  zoom: 14,\n  width: Constants.screenWidth,\n  height: 200\n}"}},{"name":"location","type":{"name":"string"},"description":{"text":"The location of the map pointer"},"defaultValue":{"value":"undefined"}},{"name":"openExternally","type":{"name":"bool"},"description":{"text":"whether to open location externally on press"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"press handler"},"defaultValue":null},{"name":"renderCustom","type":{"name":"func"},"description":{"text":"Render custom to replace the Map image but still get the press functionality"},"defaultValue":null}]}},{"node":{"displayName":"ListItemLeftPart","docblock":"","description":null,"props":[{"name":"avatar","type":{"name":"shape"},"description":null,"defaultValue":null},{"name":"avatarSize","type":{"name":"enum"},"description":null,"defaultValue":{"value":"ListItemPresenter.AVATAR_SIZES.MEDIUM"}},{"name":"icon","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"iconColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"thumbnail","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"wideThumbnail","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"thumbnailProps","type":{"name":"shape"},"description":null,"defaultValue":{"value":"{color: 'transparent'}"}},{"name":"leftCustomElement","type":{"name":"element"},"description":null,"defaultValue":null},{"name":"hasThreeRows","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"draggable","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onSelected","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"multiSelectMode","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onEnterMultiSelect","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"useCustomTheme","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"testID","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"ListItem","docblock":"","description":null,"props":[{"name":"containerStyle","type":{"name":"custom"},"description":null,"defaultValue":null},{"name":"itemSize","type":{"name":"enum"},"description":null,"defaultValue":null},{"name":"isNew","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"newIndicatorColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"separatorMode","type":{"name":"enum"},"description":null,"defaultValue":{"value":"ListItemPresenter.SEPARATOR_MODES.PARTIAL"}},{"name":"disabled","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"draggable","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"onLongPress","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onSelected","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"multiSelectMode","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onEnterMultiSelect","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"badgeColor","type":null,"description":null,"defaultValue":{"value":"Colors.blue30"}}]}},{"node":{"displayName":"ListItemMiddlePart","docblock":"","description":null,"props":[{"name":"title","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"titleColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"titleTypography","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"titleLines","type":{"name":"number"},"description":null,"defaultValue":{"value":"1"}},{"name":"titleProps","type":{"name":"object"},"description":null,"defaultValue":null},{"name":"subtitle","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"subtitleColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"subtitleTypography","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"subtitleLines","type":{"name":"number"},"description":null,"defaultValue":{"value":"1"}},{"name":"description","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"descriptionColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"descriptionTypography","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"descriptionLines","type":{"name":"number"},"description":null,"defaultValue":{"value":"1"}},{"name":"descriptionLeftIcon","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"accessoryLabel","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"accessoryLabelColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"accessoryLabelTypography","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"customDescriptionElement","type":{"name":"element"},"description":null,"defaultValue":null},{"name":"label","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"badgeText","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"badgeColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"hasRight","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"hasMiddleRight","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"disabled","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"itemSize","type":{"name":"enum"},"description":null,"defaultValue":null},{"name":"separatorMode","type":{"name":"enum"},"description":null,"defaultValue":null},{"name":"useCustomTheme","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"testID","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"ListItemRightPart","docblock":"","description":null,"props":[{"name":"button","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"checkbox","type":{"name":"shape"},"description":null,"defaultValue":null},{"name":"toggle","type":{"name":"shape"},"description":null,"defaultValue":null},{"name":"radioButton","type":{"name":"shape"},"description":null,"defaultValue":null},{"name":"showAccessoryIndicator","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"showLoader","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"showCheckmark","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"label","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"badgeText","type":{"name":"union"},"description":null,"defaultValue":null},{"name":"badgeColor","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"hasMiddleRight","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"separatorMode","type":{"name":"enum"},"description":null,"defaultValue":null},{"name":"useCustomTheme","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"testID","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"SectionHeader","docblock":"","description":null,"props":[{"name":"label","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"type","type":{"name":"enum"},"description":null,"defaultValue":{"value":"'sort'"}}]}},{"node":{"displayName":"LottieAnimation","docblock":"","description":null,"props":[{"name":"source","type":{"name":"object"},"description":{"text":"the animation json source"},"defaultValue":null},{"name":"color","type":{"name":"union"},"description":{"text":"the animation color or list of colors"},"defaultValue":null},{"name":"width","type":{"name":"union"},"description":{"text":"the width of the animation"},"defaultValue":null},{"name":"height","type":{"name":"union"},"description":{"text":"the height of the animation"},"defaultValue":null},{"name":"duration","type":{"name":"number"},"description":{"text":"the duration of the animation (default 1000ms)"},"defaultValue":null},{"name":"progress","type":{"name":"number"},"description":{"text":"the current animation progress (0-1)"},"defaultValue":null},{"name":"loop","type":{"name":"bool"},"description":{"text":"should this animation run in loop"},"defaultValue":null},{"name":"onEndAnimation","type":{"name":"func"},"description":{"text":"callback for when animation ends (this will not trigger for animations that runs in loop)"},"defaultValue":null}]}},{"node":{"displayName":"TopBarButtonLoader","docblock":"","description":null,"props":[]}},{"node":{"displayName":"BadgedButton","docblock":"","description":null,"props":[{"name":"themeId","type":{"name":"string"},"description":{"text":"Theme Id used for the Button's color"},"defaultValue":null},{"name":"buttonProps","type":{"name":"object"},"description":{"text":"Button props passed down to Button component"},"defaultValue":null},{"name":"badgeProps","type":{"name":"object"},"description":{"text":"Badge props passed down to Badge component"},"defaultValue":null},{"name":"hideBadge","type":{"name":"bool"},"description":{"text":"Hide badge shown on button"},"defaultValue":null},{"name":"badgeSize","type":{"name":"string"},"description":{"text":"Badge size (default is small for both badge and pimple badge)"},"defaultValue":null},{"name":"badgeLabel","type":{"name":"string"},"description":{"text":"Text to show inside the badge"},"defaultValue":null},{"name":"badgeBackgroundColor","type":{"name":"string"},"description":{"text":"Color of the badge background"},"defaultValue":null},{"name":"badgeBorderColor","type":{"name":"string"},"description":{"text":"Color of border around the badge"},"defaultValue":null},{"name":"badgeBorderWidth","type":{"name":"number"},"description":{"text":"Width of border around the badge"},"defaultValue":null},{"name":"addButtonPadding","type":{"name":"bool"},"description":{"text":"Predefined paddingRight for Android only! Mandatory only when button is farthest to the right, or found with another custom component wrapped in a <View>.\nWithout it the button is pushed all the way right because of Navigation default behavior.\nDoes not affect IOS."},"defaultValue":null},{"name":"buttonIconSource","type":{"name":"union"},"description":{"text":"Icon image source"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"Button's action handler"},"defaultValue":null}]}},{"node":{"displayName":"CustomTopBarTitle","docblock":"","description":null,"props":[]}},{"node":{"displayName":"NumberSpinner","docblock":"","description":null,"props":[{"name":"min","type":{"name":"number"},"description":{"text":"min value in a range of options (default: 1)"},"defaultValue":{"value":"1"}},{"name":"max","type":{"name":"number"},"description":{"text":"max value in a range of options (default: 10)"},"defaultValue":{"value":"10"}},{"name":"options","type":{"name":"arrayOf"},"description":{"text":"alternative to range, you can pass a list of options"},"defaultValue":null},{"name":"formatter","type":{"name":"func"},"description":{"text":"a display formatter for the options"},"defaultValue":null}]}},{"node":{"displayName":"Picker","docblock":"","description":null,"props":[{"name":"type","type":{"name":"enum"},"description":{"text":"Type for predefined list (ignores Picker.Item children)"},"defaultValue":null},{"name":"showSearch","type":{"name":"bool"},"description":{"text":"Should the option list will have a search input for filtering"},"defaultValue":null},{"name":"hoistSelectedItem","type":{"name":"bool"},"description":{"text":"Whether to show the selected item at the top of the option list\n(Will disable scroll to selected behavior)"},"defaultValue":null},{"name":"searchProps","type":{"name":"object"},"description":{"text":"Props that will passed to Picker search box"},"defaultValue":null}]}},{"node":{"displayName":"SectionList","docblock":"","description":null,"props":[]}},{"node":{"displayName":"ScrollView","docblock":"","description":null,"props":[]}},{"node":{"displayName":"Selectable","docblock":"","description":null,"props":[{"name":"selected","type":{"name":"bool"},"description":{"text":"Whether to show the selected indication"},"defaultValue":null},{"name":"borderWidth","type":{"name":"number"},"description":{"text":"The selected border width (default: 2)"},"defaultValue":null},{"name":"indicatorSize","type":{"name":"number"},"description":{"text":"The indicator size"},"defaultValue":null},{"name":"indicatorIcon","type":{"name":"number"},"description":{"text":"The indicator icon"},"defaultValue":null}]}},{"node":{"displayName":"TabBar.Item","docblock":"@description: TabBar.Item, inner component of TabBar for configuring the tabs\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js","description":{"text":"@description: TabBar.Item, inner component of TabBar for configuring the tabs\n@example: https://github.com/wix/react-native-ui-lib/blob/master/demo/src/screens/componentScreens/TabBarScreen.js"},"props":[{"name":"icon","type":{"name":"number"},"description":{"text":"icon of the tab"},"defaultValue":null},{"name":"iconColor","type":{"name":"string"},"description":{"text":"icon tint color"},"defaultValue":null},{"name":"iconSelectedColor","type":{"name":"string"},"description":{"text":"icon selected tint color"},"defaultValue":null},{"name":"label","type":{"name":"string"},"description":{"text":"label of the tab"},"defaultValue":null},{"name":"labelStyle","type":{"name":"custom"},"description":{"text":"custom label style"},"defaultValue":null},{"name":"badge","type":{"name":"shape"},"description":{"text":"Badge component props to display next the item label"},"defaultValue":null},{"name":"maxLines","type":{"name":"number"},"description":{"text":"maximun number of lines the label can break"},"defaultValue":{"value":"1"}},{"name":"selectedLabelStyle","type":{"name":"custom"},"description":{"text":"custom selected tab label style"},"defaultValue":null},{"name":"selected","type":{"name":"bool"},"description":{"text":"whether the tab is selected or not"},"defaultValue":null},{"name":"showDivider","type":{"name":"bool"},"description":{"text":"whether the tab will have a divider on its right"},"defaultValue":null},{"name":"width","type":{"name":"number"},"description":{"text":"A fixed width for the item"},"defaultValue":null},{"name":"ignore","type":{"name":"bool"},"description":{"text":"ignore of the tab"},"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":{"text":"callback for when pressing a tab"},"defaultValue":null},{"name":"uppercase","type":{"name":"bool"},"description":{"text":"whether to change the text to uppercase"},"defaultValue":null},{"name":"activeBackgroundColor","type":{"name":"string"},"description":{"text":"Apply background color on press for TouchableOpacity"},"defaultValue":null}]}},{"node":{"displayName":"TabBar","docblock":"","description":null,"props":[{"name":"enableShadow","type":{"name":"bool"},"description":{"text":"Show Tab Bar bottom shadow"},"defaultValue":null},{"name":"minTabsForScroll","type":{"name":"number"},"description":{"text":"The minimum number of tabs to render in scroll mode"},"defaultValue":null},{"name":"selectedIndex","type":{"name":"number"},"description":{"text":"current selected tab index"},"defaultValue":{"value":"0"}},{"name":"onChangeIndex","type":{"name":"func"},"description":{"text":"callback for when index has change (will not be called on ignored items)"},"defaultValue":null},{"name":"onTabSelected","type":{"name":"func"},"description":{"text":"callback for when tab selected"},"defaultValue":null},{"name":"indicatorStyle","type":{"name":"custom"},"description":{"text":"custom style for the selected indicator"},"defaultValue":null},{"name":"height","type":{"name":"number"},"description":{"text":"Tab Bar height"},"defaultValue":null},{"name":"containerWidth","type":{"name":"number"},"description":{"text":"The TabBar container width"},"defaultValue":{"value":"Constants.screenWidth"}}]}},{"node":{"displayName":"ThemeView","docblock":"","description":null,"props":[]}},{"node":{"displayName":"Thumbnail","docblock":"@description: A component for showing a square image with a colored shadow\n@example: ThumbnailScreen.js","description":{"text":"@description: A component for showing a square image with a colored shadow\n@example: ThumbnailScreen.js"},"props":[{"name":"imageSize","type":{"name":"number"},"description":{"text":"Size of the image"},"defaultValue":null},{"name":"shadowOffset","type":{"name":"number"},"description":{"text":"Offset of the shadow"},"defaultValue":{"value":"0"}},{"name":"color","type":{"name":"string"},"description":{"text":"Color of the thumbnail image"},"defaultValue":null},{"name":"shadowColor","type":{"name":"string"},"description":{"text":"Color of the thumbnail shadow"},"defaultValue":null},{"name":"borderRadius","type":{"name":"number"},"description":{"text":"Border radius of both image and shadow"},"defaultValue":null},{"name":"defaultSource","type":null,"description":null,"defaultValue":{"value":"Assets.illustrations.defaultThumbnail"}}]}},{"node":{"displayName":"Toast","docblock":"","description":null,"props":[{"name":"visible","type":{"name":"bool"},"description":{"text":"Whether to show or hide the toast"},"defaultValue":null},{"name":"animated","type":{"name":"bool"},"description":{"text":"should the toast appear/disappear with animation"},"defaultValue":{"value":"true"}},{"name":"position","type":{"name":"enum"},"description":{"text":"The position of the toast. 'top' or 'bottom'."},"defaultValue":{"value":"'top'"}},{"name":"zIndex","type":{"name":"number"},"description":{"text":"custom zIndex for toast"},"defaultValue":{"value":"100"}},{"name":"backgroundColor","type":{"name":"string"},"description":{"text":"The background color of the toast"},"defaultValue":null},{"name":"color","type":{"name":"string"},"description":{"text":"the toast content color (message, actions labels)"},"defaultValue":null},{"name":"message","type":{"name":"string"},"description":{"text":"the toast message"},"defaultValue":null},{"name":"centerMessage","type":{"name":"bool"},"description":{"text":"should message be centered in the toast"},"defaultValue":null},{"name":"icon","type":{"name":"number"},"description":{"text":"a left icon"},"defaultValue":null},{"name":"action","type":{"name":"shape"},"description":{"text":"a single action for the user"},"defaultValue":null},{"name":"actions","type":{"name":"arrayOf"},"description":null,"defaultValue":null},{"name":"showLoader","type":{"name":"bool"},"description":{"text":"should show a loader (showDismiss must be false)"},"defaultValue":null},{"name":"onDismiss","type":{"name":"func"},"description":{"text":"callback for dismiss action"},"defaultValue":null},{"name":"autoDismiss","type":{"name":"number"},"description":{"text":"number of milliseconds to automatically invoke the onDismiss callback"},"defaultValue":null},{"name":"showDismiss","type":{"name":"bool"},"description":{"text":"show dismiss action (right 'X' button)"},"defaultValue":null},{"name":"onAnimationEnd","type":{"name":"func"},"description":{"text":"callback for end of component animation"},"defaultValue":null},{"name":"renderContent","type":{"name":"func"},"description":{"text":"render a custom toast content (better use with StyleSheet.absoluteFillObject to support safe area)"},"defaultValue":null},{"name":"renderAbove","type":{"name":"func"},"description":{"text":"render a custom view that will appear permanently above a Toast and animate with it when the Toast is made visible or dismissed"},"defaultValue":null}]}},{"node":{"displayName":"ToastButton","docblock":"","description":null,"props":[{"name":"label","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"isVisible","type":{"name":"bool"},"description":null,"defaultValue":null},{"name":"onPress","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"bottomMargin","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"duration","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"withoutAnimation","type":{"name":"bool"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"WixStepper","docblock":"","description":null,"props":[{"name":"value","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"minValue","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"maxValue","type":{"name":"number"},"description":null,"defaultValue":null},{"name":"onValueChange","type":{"name":"func"},"description":null,"defaultValue":null},{"name":"id","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"WixMedia","docblock":"","description":null,"props":[{"name":"mediaType","type":{"name":"enum"},"description":null,"defaultValue":null},{"name":"imageId","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"url","type":{"name":"string"},"description":null,"defaultValue":null}]}},{"node":{"displayName":"WixVideo","docblock":"","description":null,"props":[{"name":"firstFrameImageId","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"videoUrl","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"baseUrl","type":{"name":"string"},"description":null,"defaultValue":null},{"name":"resizeMode","type":null,"description":null,"defaultValue":{"value":"'cover'"}},{"name":"repeat","type":null,"description":null,"defaultValue":{"value":"true"}}]}},{"node":{"displayName":"WixImage","docblock":"@description: Image that support Wix static images and decrease download time\n@example: https://github.com/wix-private/wix-react-native-ui-lib/blob/master/example/screens/components/WixImagesScreen.js","description":{"text":"@description: Image that support Wix static images and decrease download time\n@example: https://github.com/wix-private/wix-react-native-ui-lib/blob/master/example/screens/components/WixImagesScreen.js"},"props":[{"name":"imageId","type":{"name":"string"},"description":{"text":"the imageId according to wix static images e.g 8616c2ac52ee4d0294dd3c7e578228a1.jpg"},"defaultValue":null},{"name":"baseUrl","type":{"name":"string"},"description":{"text":"base url for wix static urls"},"defaultValue":null},{"name":"width","type":{"name":"number"},"description":{"text":"fixed width for fetching wix static image"},"defaultValue":null},{"name":"height","type":{"name":"number"},"description":{"text":"fixed height for fetching wix static image"},"defaultValue":null},{"name":"size","type":{"name":"union"},"description":{"text":"fixed size according to WixImage.imageSizes (SMALL, MEDIUM, LARGE)"},"defaultValue":null},{"name":"mode","type":{"name":"enum"},"description":{"text":"the mode we should fetch the image (fit/fill)"},"defaultValue":{"value":"ImageService.MODES.FIT"}},{"name":"debug","type":{"name":"bool"},"description":{"text":"enable debug mode to print the transformed image source"},"defaultValue":null}]}}]}}